TITLE:: FRDDX7PlugIn
summary:: A custom stereo reverb synth with it's own GUI. Thought to be used for live electronics.
categories:: FRD-PlugIns
related:: FRDDX7PlugIn

DESCRIPTION::
FRDDX7PlugIn is an emulation of Yamaha DX7 Mark-2 keyboard.


CLASSMETHODS::



METHOD:: new
Create a new FRDDX7PlugIn instance.
returns:: A FRDDX7PlugIn instance.



INSTANCEMETHODS::


METHOD:: createRandomRelativePatch
Create a random patch and play it.
ARGUMENT:: numCarriers
Number of carriers (1 to 5).
ARGUMENT:: amp
Amplitude of patch.
ARGUMENT:: dur
Duration of patch.
ARGUMENT:: harmonic
Whether the frequencies of the FM must be harmonic or not (true or false).
ARGUMENT:: imod
Range of index of modulation [lower, upper].
ARGUMENT:: outCh
Output channel.


METHOD:: createRandomRelativePatchNRT
Create a OSC score with a random patch and return it.
ARGUMENT:: numCarriers
Number of carriers (1 to 5).
ARGUMENT:: amp
Amplitude of patch.
ARGUMENT:: dur
Duration of patch.
ARGUMENT:: harmonic
Whether the frequencies of the FM must be harmonic or not (true or false).
ARGUMENT:: imod
Range of index of modulation [lower, upper].
ARGUMENT:: outCh
Output channel.
ARGUMENT:: nrtTimeStamp
Start time of the score.
ARGUMENT:: startNode
First node id to use.
ARGUMENT:: startPrivateBus
First private audio bus to use.
returns:: OSC score.


METHOD:: writeSynthDef
Write internal synth definitions (to be run only once when installing this class!).











EXAMPLES::

Real Time:

code::
f = FRDDX7PlugIn();
f.createRandomRelativePatch(numCarriers: [1, 2, 3, 4].choose, freq: exprand(13, 1030), amp: rrand(0.25, 0.5), dur: rrand(2.0, 5), harmonic: [false, true].choose, imod: [0.07, rrand(0.15, 1.53)]);
::



Non-Real Time:

code::
(
f = FRDDX7PlugIn();
c = [];
7.do({ | id |
	c = c ++ f.createRandomRelativePatchNRT(numCarriers: [1, 2, 3, 4].choose, freq: exprand(13, 1030), amp: rrand(0.25, 0.5), dur: rrand(2.0, 5), harmonic: [false, true].choose, imod: [0.07, rrand(0.15, 1.53)], outCh: 0, nrtTimeStamp: rrand(0.0, 7.0), startNode: 1002 + (id * 30), startPrivateBus: 40 + (id * 6));
});
c = c ++ [[12, [\c_set, 0, 0]]];
o = ServerOptions.new.numOutputBusChannels = 2;
Score.recordNRT(c, Platform.defaultTempDir +/+ "help-oscFile", Platform.defaultTempDir +/+ "DX7_NRT.aiff", options: o);
)
::




















